# 

[] Splitの実装

[] trainへの反映


[1] RState:
    [1] シングルトン化

Processをどうするか？
    いくつかのprocessをまとめたい
        generationの時に楽。
        **configの改良時にも全て直さなくていいので楽。
    optionalにできるとよい。
        今まで通りのlistも受け付ける?
    関数を直接書くのとの対応はどうするか？
        こちらの方がtransposeなどは楽。
        そもそもpylanceが使えるので間違えにくい。
            ただ, 現状はbatchとmodelからキーを引き出すのが大変になっている。
            関数にする場合, 変数名をそのままbatchのkeyに対応させたい。
            が, そうするとprocessを違うbatchのkeyで使いたい時に困る。

    なるべく直感的にわかりやすくしたい。

    本質的には, batchの名前と処理中での名前は切り離されるべき。
        ただ, そうすると同じkeyを延々と書くのが面倒
        違うものだけ指定するようにする？
            ただ, そうすると間違いが増えそうで怖い。
        そう考えると, そもそも元々の1つ1つのprocessの概念と重複している。
        階層的に処理をまとめたい場合もあるかもしれない(ないか)
    とりあえず, 決められた名前のみ可能ということにする？
        dictとは相性が悪いが。
    「比較したい」というのが根本にある。
        同じ機能の処理をまとめるということ。
        いや, 生成とかは単に部分的にやりたいこともあるか。
    ロス計算の一部を取り出し, 別の機能に使いたいということ。

    **processをまとめた上で, さらにそれらをprocessでまとめるという感じにしよう。


